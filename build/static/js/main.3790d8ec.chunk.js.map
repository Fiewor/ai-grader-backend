{"version":3,"sources":["components/DisplayText.jsx","components/DisplayGrade.js","components/DropArea.jsx","components/Footer.jsx","components/Nav.jsx","components/Form.jsx","components/UploadBox.jsx","components/ViewButton.jsx","components/LandingPage.jsx","App.js","index.js"],"names":["DisplayText","useState","text","setText","undefined","loading","setLoading","useEffect","getText","a","axios","get","process","result","data","page","map","block","id","autoplay","loop","mode","src","speed","style","width","DisplayGrade","arr","grade","totalPoints","score","setScore","getGrade","pointsAwardable","UploadArea","styled","div","Instructions","ButtonContainer","DropArea","mark","section","children","path","year","Date","getFullYear","Foot","footer","Anchor","Footer","href","target","rel","NavBar","nav","BrandName","NavLinks","ul","LinkItem","li","Nav","to","Form","action","method","htmlFor","type","name","className","value","Textarea","textarea","UploadBox","files","setFiles","console","log","readOnly","cols","rows","placeholder","onChange","event","Array","from","multiple","Button","onClick","preventDefault","formData","FormData","forEach","fileItem","i","append","post","then","res","noFile","alert","status","catch","error","UploadButton","button","ViewButton","Home","DetailsSection","LinkSection","LandingPage","App","exact","element","padding","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.3790d8ec.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Player } from \"@lottiefiles/react-lottie-player\";\r\n\r\nexport const DisplayText = () => {\r\n  const [text, setText] = useState([]);\r\n  const [loading, setLoading] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const getText = async () => {\r\n      let result = await axios.get(\r\n        `${process.env.REACT_APP_LOCAL_API_URL}viewText`\r\n      );\r\n      setText(result.data.page);\r\n      setLoading(true);\r\n    };\r\n    getText();\r\n\r\n    // return () => {\r\n    //   setText([]);\r\n    //   setLoading(false);\r\n    // };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!loading ? (\r\n        <Player\r\n          autoplay\r\n          loop\r\n          mode=\"normal\"\r\n          src={process.env.REACT_APP_LOAD_SCREEN_ANIMATION}\r\n          speed=\"1\"\r\n          style={{ width: \"70%\" }}\r\n        ></Player>\r\n      ) : (\r\n        text.map((block, id) => <p key={id}>{block.text}</p>)\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Player } from \"@lottiefiles/react-lottie-player\";\r\n\r\nexport const DisplayGrade = () => {\r\n  const [score, setScore] = useState({ arr: [], grade: 0, totalPoints: 0 });\r\n  const [loading, setLoading] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const getGrade = async () => {\r\n      let result = await axios.get(\r\n        `${process.env.REACT_APP_LOCAL_API_URL}viewGrade`\r\n      );\r\n      setScore({\r\n        arr: result.data.arr,\r\n        grade: result.data.grade,\r\n        totalPoints: result.data.totalPoints,\r\n      });\r\n      setLoading(true);\r\n    };\r\n    getGrade();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!loading ? (\r\n        <Player\r\n          autoplay\r\n          loop\r\n          mode=\"normal\"\r\n          src={process.env.REACT_APP_LOAD_SCREEN_ANIMATION}\r\n          speed=\"1\"\r\n          style={{ width: \"70%\" }}\r\n        ></Player>\r\n      ) : (\r\n        <div>\r\n          <ul>\r\n            {score.arr.map((score) => (\r\n              <li key={score.id}>\r\n                Score for question {score.id}: {score.grade}/\r\n                {score.pointsAwardable}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p>{`Total score for this answer page is ${score.grade}/${score.totalPoints}`}</p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { UploadBox, ViewButton } from \"./index\";\r\n\r\nconst UploadArea = styled.div`\r\n  width: 70vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  padding: 0.5em;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 1.1rem;\r\n    width: 100vw;\r\n  }\r\n`;\r\n\r\nconst Instructions = styled.div`\r\n  p {\r\n    @import url(\"https://fonts.googleapis.com/css2?family=Raleway:wght@300&family=Roboto:wght@300&display=swap\");\r\n    text-align: left;\r\n    font-family: \"Raleway\", sans-serif;\r\n    font-size: 1rem;\r\n    padding: 0.4rem 0;\r\n    @media screen and (min-width: 768px) {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n  ul {\r\n    font-size: 0.8rem;\r\n    ${\"\" /* list-style: disc inside; */}\r\n    list-style: disc url('../icons/check_box_FILL0_wght400_GRAD0_opsz48.png') inside;\r\n    @media screen and (min-width: 768px) {\r\n      font-size: 1rem;\r\n    }\r\n    li {\r\n      font-family: \"Roboto\", sans-serif;\r\n      padding: 0.2rem 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 9vh;\r\n`;\r\n\r\nexport const DropArea = (mark) => {\r\n  return (\r\n    <UploadArea>\r\n      <Instructions>\r\n        <p>How to use</p>\r\n        <ul>\r\n          <li>Upload a page of student answer sheet in the specified area</li>\r\n          <li>Wait for alert notification confirming successful upload</li>\r\n          <li>Upload marking guide in specified area</li>\r\n          <li>Wait for alert notification confirming successful upload</li>\r\n          <li>Proceed to view extracted text or grade</li>\r\n          <br />\r\n          <li>Supported file formats: JPEG, PNG, BMP, PDF, and TIFF</li>\r\n          <li>\r\n            For PDF and TIFF files, the system currently processes only first\r\n            two pages.\r\n          </li>\r\n          <li>\r\n            The file size must be less than 4 MB and dimensions at least 50 x 50\r\n            pixels and at most 10000 x 10000 pixels.\r\n          </li>\r\n        </ul>\r\n      </Instructions>\r\n      <UploadBox section=\"answer\" />\r\n      <UploadBox section=\"mark\" />\r\n      <ButtonContainer>\r\n        <ViewButton children=\"View text\" path=\"/viewText\" />\r\n        <ViewButton children=\"View grade\" path=\"/viewGrade\" />\r\n      </ButtonContainer>\r\n    </UploadArea>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst year = new Date().getFullYear();\r\n\r\nconst Foot = styled.footer`\r\n  font-size: 0.8rem;\r\n  position: absolute;\r\n  width: 100%;\r\n  text-align: center;\r\n  bottom: 0;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 1.1rem;\r\n  }\r\n`;\r\n\r\nexport const Anchor = styled.a`\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <Foot>\r\n      <p>\r\n        Made with ❤ and React by\r\n        <Anchor\r\n          href=\"https://github.com/Fiewor\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer noopener\"\r\n        >\r\n          {\" \"}\r\n          John Fiewor{\" \"}\r\n        </Anchor>\r\n        © {year}\r\n      </p>\r\n    </Foot>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NavBar = styled.nav`\r\n  @import url(\"https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap\");\r\n  font-family: \"Roboto\", sans-serif;\r\n  background: #000;\r\n  color: rgb(255, 255, 255);\r\n  min-height: 8vh;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100vw;\r\n`;\r\n\r\nconst BrandName = styled.nav`\r\n  font-size: 1.5rem;\r\n  padding-left: 3vw;\r\n  color: rgb(255, 255, 255);\r\n  &:hover {\r\n    color: rgba(255, 255, 255, 0.9);\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 2.5rem;\r\n  }\r\n`;\r\n\r\nconst NavLinks = styled.ul`\r\n  width: 30%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  list-style: none;\r\n`;\r\n\r\nconst LinkItem = styled.li`\r\n  color: white;\r\n  font-size: 1rem;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: rgba(255, 255, 255, 0.9);\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\n\r\nexport const Nav = () => {\r\n  return (\r\n    <NavBar>\r\n      <Link to=\"/\">\r\n        <BrandName>AI-Grader</BrandName>\r\n      </Link>\r\n      <NavLinks>\r\n        <Link to=\"/\">\r\n          <LinkItem>Home</LinkItem>\r\n        </Link>\r\n        <Link to=\"/login\">\r\n          <LinkItem>Login</LinkItem>\r\n        </Link>\r\n      </NavLinks>\r\n    </NavBar>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Form = () => {\r\n  return (\r\n    <form action=\"/login\" method=\"post\">\r\n      <div>\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input type=\"text\" name=\"username\" className=\"login-input\" />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input type=\"password\" name=\"password\" className=\"login-input\" />\r\n      </div>\r\n      <div>\r\n        <input type=\"submit\" value=\"Log In\" className=\"login-button\" />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\n\r\nconst Textarea = styled.textarea`\r\n  width: 100%;\r\n  height: 90%;\r\n  padding: 10px;\r\n  margin: 0.1rem;\r\n  border-radius: 20px;\r\n  box-shadow: 0 0 5px 4px rgb(161, 161, 161);\r\n  background-color: #fff;\r\n  font-size: 1rem;\r\n  outline: none;\r\n  resize: none;\r\n  position: relative;\r\n  text-align: center;\r\n  display: relative;\r\n`;\r\n\r\nconst Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: space-between;\r\n  min-width: 40vw;\r\n  min-height: max-content;\r\n  overflow: hidden;\r\n\r\n  input[type=\"file\"] {\r\n    position: absolute;\r\n    font-size: 0.7rem;\r\n  }\r\n\r\n  .upload-icon-container {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    align-self: flex-end;\r\n    transform: translateY(2em);\r\n  }\r\n\r\n  .file-input {\r\n    cursor: pointer;\r\n    padding: 2rem;\r\n  }\r\n\r\n  .upload-icon {\r\n    color: rgb(23, 74, 167);\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    input[type=\"file\"] {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UploadBox = ({ section }) => {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const fileUpload = (event) => {\r\n    setFiles(Array.from(event.target.files));\r\n  };\r\n  console.log(files);\r\n\r\n  const sendFiles = (event) => {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    files.forEach((fileItem, i) => {\r\n      console.log(fileItem);\r\n      formData.append(i, fileItem);\r\n    });\r\n\r\n    let noFile = false;\r\n\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_LOCAL_API_URL}uploads/${section}`,\r\n        formData\r\n      )\r\n      .then((res) => {\r\n        console.log(\"res\", res);\r\n        noFile = res.data.noFile;\r\n        if (noFile) {\r\n          alert(`Choose at least one file before uploading`);\r\n          noFile = false;\r\n          return;\r\n        }\r\n        res.status !== 200\r\n          ? alert(`Unable to upload files to local directory`)\r\n          : alert(`${res.data}`);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <Textarea\r\n        readOnly=\"yes\"\r\n        name=\"content\"\r\n        id=\"\"\r\n        cols=\"20\"\r\n        rows=\"3\"\r\n        placeholder={`Upload ${section} sheets here`}\r\n      />\r\n      <input\r\n        onChange={fileUpload}\r\n        type=\"file\"\r\n        name=\"file\"\r\n        multiple\r\n        className=\"file-input\"\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        onClick={sendFiles}\r\n        className=\"upload-icon-container\"\r\n      >\r\n        <PublishIcon className=\"upload-icon\" />\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst UploadButton = styled.button`\r\n  background: #959595;\r\n  padding: 1rem 1.5rem;\r\n  border: none;\r\n  margin: 0.2rem;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    background: #5e5e5e;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport const ViewButton = ({ children, path }) => {\r\n  return (\r\n    <UploadButton>\r\n      <Link to={path}>{children}</Link>\r\n    </UploadButton>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = styled.div`\r\n  @import url(\"https://fonts.googleapis.com/css2?family=Indie+Flower&family=Raleway:wght@300&family=Roboto:wght@300&family=Roboto+Mono:ital,wght@1,300&family=Raleway:wght@300&display=swap\");\r\n  font-family: \"Roboto\", sans-serif;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-content: center;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  h1 {\r\n    padding: 1rem 0;\r\n    text-align: center;\r\n    font-size: 1.7rem;\r\n    @media screen and (min-width: 768px) {\r\n      font-size: 2.5rem;\r\n    }\r\n  }\r\n  p {\r\n    font-family: \"Roboto Mono\", monospace;\r\n    padding: 1rem 0;\r\n    text-align: center;\r\n    @media screen and (min-width: 768px) {\r\n      font-size: 1.5rem;\r\n      padding: 1rem;\r\n    }\r\n    span {\r\n      font-family: \"Indie Flower\", cursive;\r\n    }\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: white;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DetailsSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: #959595;\r\n  color: white;\r\n  width: 100vw;\r\n  padding: 3rem 2rem;\r\n  font-family: \"Raleway\", sans-serif;\r\n  p {\r\n    @media screen and (min-width: 768px) {\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n  a {\r\n    text-align: center;\r\n    color: black;\r\n    font-size: 0.75rem;\r\n    &:hover {\r\n      color: rgba(0, 0, 0, 0.6);\r\n    }\r\n    @media screen and (min-width: 768px) {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LinkSection = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  text-align: left;\r\n  justify-content: space-around;\r\n  padding: 1rem 0;\r\n  a {\r\n    background: rgb(94, 94, 94);\r\n    padding: 0.5rem 0.8rem;\r\n    margin-bottom: 1rem;\r\n    &:hover {\r\n      background: rgb(94, 94, 94, 0.8);\r\n    }\r\n    @media screen and (min-width: 768px) {\r\n      padding: 0.8rem 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LandingPage = () => {\r\n  return (\r\n    <Home>\r\n      <div>\r\n        <h1>Welcome to AI-Grader!</h1>\r\n        <p>\r\n          AI-Grader is a web application that uses artificial intelligence to\r\n          grade{\" \"}\r\n          <span>\r\n            <em>handwritten</em>\r\n          </span>{\" \"}\r\n          answer sheets.\r\n        </p>\r\n        <DetailsSection>\r\n          <p>\r\n            AI-Grader uses Microsoft Azure Cognitive Services - Computer Vision,\r\n            Optical Character Recognition and Key Phrase Extraction...\r\n          </p>\r\n          <a href=\"https://github.com/Fiewor/ai-grader\">\r\n            Read more on how it works\r\n          </a>\r\n        </DetailsSection>\r\n\r\n        <LinkSection>\r\n          <Link to=\"/grade\">Try it out</Link>\r\n        </LinkSection>\r\n      </div>\r\n    </Home>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  DropArea,\r\n  DisplayText,\r\n  DisplayGrade,\r\n  Nav,\r\n  Form,\r\n  Footer,\r\n  LandingPage,\r\n} from \"./components\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Nav />\r\n        <Routes>\r\n          <Route path=\"/\" exact element={<LandingPage />} />\r\n          <Route path=\"grade\" element={<DropArea />} />\r\n          <Route path=\"login\" element={<Form />} />\r\n          <Route path=\"viewText\" element={<DisplayText />} />\r\n          <Route path=\"viewGrade\" element={<DisplayGrade />} />\r\n          <Route\r\n            path=\"*\"\r\n            element={\r\n              <main style={{ padding: \"1rem\" }}>\r\n                <p>Ooops. There's nothing here!</p>\r\n              </main>\r\n            }\r\n          />\r\n        </Routes>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nconst root = document.getElementById('root')\r\n\r\nReactDOM.render(\r\n  <App />, root\r\n);\r\n\r\nif(module.hot){\r\n  module.hot.accept();\r\n}"],"sourceRoot":""}