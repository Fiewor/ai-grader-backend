{"version":3,"sources":["features/auth/authService.js","features/auth/authSlice.js","app/store.js","components/Footer.jsx","components/Header.jsx","components/UploadBox.jsx","components/ViewButton.jsx","pages/DisplayContent.jsx","pages/DisplayGrade.js","pages/LandingPage.jsx","pages/Register.jsx","pages/Login.jsx","pages/TextPage.jsx","pages/DropArea.jsx","pages/TextList.jsx","App.js","index.js"],"names":["API_URL","headers","register","userData","a","key","form","FormData","append","axios","post","response","data","console","log","localStorage","setItem","JSON","stringify","login","authService","logout","removeItem","user","parse","getItem","initialState","isError","isSuccess","isLoading","message","createAsyncThunk","thunkAPI","toString","rejectWithValue","authSlice","createSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","store","configureStore","reducer","auth","authReducer","Date","getFullYear","styled","footer","Header","navigate","useNavigate","dispatch","useDispatch","useSelector","NavBar","to","BrandName","NavLinks","LinkItem","onClick","header","nav","ul","li","Textarea","textarea","Form","div","Input","input","attrs","props","type","UploadBox","section","useState","files","setFiles","readOnly","id","cols","rows","placeholder","onChange","event","Array","from","target","multiple","className","Button","preventDefault","formData","forEach","fileItem","i","then","res","noFile","alert","status","catch","error","UploadButton","button","ViewButton","children","path","DisplayContent","route","answerDoc","markDoc","text","setData","undefined","loading","setLoading","markId","answerId","ids","setIds","useEffect","getTextData","get","result","deleteItem","e","doc","delete","updatedDoc","filter","el","_id","length","P","map","arr","List","value","checked","page","fileName","autoplay","loop","mode","src","process","speed","style","width","p","DisplayGrade","grade","totalPoints","score","setScore","query","URLSearchParams","useLocation","search","getGrade","Container","GradeContainer","ListItem","pointsAwardable","ButtonContainer","playerStyle","background","height","LandingPage","Home","DetailsSection","href","LinkSection","Register","email","password","password2","setFormData","prevState","Heading","FormSection","onSubmit","FormGroup","htmlFor","required","Login","TextPage","setText","setFileName","ref","useRef","useParams","rawText","handlePrint","useReactToPrint","onPrintError","content","current","removeAfterPrint","handleDownload","print","printIframe","document","contentDocument","html","getElementsByTagName","exporter","Html2Pdf","filename","getPdf","TextContainer","line","Text","DropArea","Instructions","Title","Group","Item","TextList","App","exact","element","padding","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.99cee8d1.chunk.js","sourcesContent":["// for making HTTP request, sending the data back and setting (user)data received in localStorage\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:3001/api/users/\";\r\n\r\nconst headers = { \"Content-Type\": \"multipart/form-data\" };\r\n\r\n// Register user\r\nconst register = async (userData) => {\r\n  const form = new FormData();\r\n  for (const key in userData) {\r\n    form.append(key, userData[key]);\r\n  }\r\n  const response = await axios.post(API_URL, form, headers);\r\n\r\n  if (response.data) {\r\n    console.log(\"response: \", response.data);\r\n    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n  }\r\n\r\n  return response.data;\r\n};\r\n\r\n// Login user\r\nconst login = async (userData) => {\r\n  // const response = await axios.post(API_URL + `login`, userData);\r\n  const form = new FormData();\r\n  for (const key in userData) {\r\n    form.append(key, userData[key]);\r\n  }\r\n  const response = await axios.post(API_URL + `login`, form, headers);\r\n\r\n  if (response.data) {\r\n    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n  }\r\n\r\n  return response.data;\r\n};\r\n\r\n// Logout User\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst authService = {\r\n  register,\r\n  login,\r\n  logout,\r\n};\r\n\r\nexport default authService;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport authService from \"./authService\";\r\n\r\n// Get user from localStorage\r\nconst user = JSON.parse(localStorage.getItem(\"user\")); // parsing because localStorage can only have strings\r\n\r\nconst initialState = {\r\n  user: user ? user : null,\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: \"\",\r\n};\r\n\r\n// Register user\r\nexport const register = createAsyncThunk(\r\n  \"auth/register\",\r\n  async (user, thunkAPI) => {\r\n    try {\r\n      return await authService.register(user);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\n// Login user\r\nexport const login = createAsyncThunk(\"auth/login\", async (user, thunkAPI) => {\r\n  try {\r\n    return await authService.login(user);\r\n  } catch (error) {\r\n    const message =\r\n      (error.response && error.response.data && error.response.data.message) ||\r\n      error.message ||\r\n      error.toString();\r\n    return thunkAPI.rejectWithValue(message);\r\n  }\r\n});\r\n\r\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\r\n  await authService.logout();\r\n});\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => {\r\n      state.isLoading = false;\r\n      state.isSuccess = false;\r\n      state.isError = false;\r\n      state.message = \"\";\r\n    },\r\n  },\r\n  // for async operations\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(register.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(register.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(register.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n        state.user = null;\r\n      })\r\n      .addCase(login.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n        state.user = null;\r\n      })\r\n      .addCase(logout.fulfilled, (state) => {\r\n        state.user = null;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authReducer from \"../features/auth/authSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst year = new Date().getFullYear();\r\n\r\nconst Foot = styled.footer`\r\n  font-size: 0.8rem;\r\n  width: 100%;\r\n  text-align: center;\r\n  bottom: 0;\r\n  padding: 1rem 0;\r\n  margin-top: 2rem;\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport const Anchor = styled.a`\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <Foot>\r\n      <p>\r\n        Made with ❤ and React by\r\n        <Anchor\r\n          href=\"https://github.com/Fiewor\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer noopener\"\r\n        >\r\n          {\" \"}\r\n          John Fiewor{\" \"}\r\n        </Anchor>\r\n        © {year}\r\n      </p>\r\n    </Foot>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { FaSignInAlt, FaSignOutAlt, FaUser } from \"react-icons/fa\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout, reset } from \"../features/auth/authSlice\";\r\n\r\nexport const Header = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  const onLogout = () => {\r\n    dispatch(logout());\r\n    dispatch(reset());\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <NavBar>\r\n      <Link to=\"/\">\r\n        <BrandName>AI-Grader</BrandName>\r\n      </Link>\r\n      <NavLinks>\r\n        {user ? (\r\n          <LinkItem>\r\n            <button onClick={onLogout}>\r\n              <FaSignInAlt />\r\n              Logout\r\n            </button>\r\n          </LinkItem>\r\n        ) : (\r\n          <>\r\n            <Link to=\"/\">\r\n              <LinkItem>Home</LinkItem>\r\n            </Link>\r\n            <Link to=\"/login\">\r\n              <LinkItem>\r\n                <FaSignInAlt />\r\n                Login\r\n              </LinkItem>\r\n            </Link>\r\n            <Link to=\"/register\">\r\n              <LinkItem>\r\n                <FaUser />\r\n                Register\r\n              </LinkItem>\r\n            </Link>\r\n          </>\r\n        )}\r\n      </NavLinks>\r\n    </NavBar>\r\n  );\r\n};\r\n\r\nconst NavBar = styled.header`\r\n  @import url(\"https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap\");\r\n  font-family: \"Roboto\", sans-serif;\r\n  background: #000;\r\n  color: rgb(255, 255, 255);\r\n  min-height: 8vh;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100vw;\r\n`;\r\n\r\nconst BrandName = styled.nav`\r\n  font-size: 1.5rem;\r\n  padding-left: 3vw;\r\n  color: rgb(255, 255, 255);\r\n  &:hover {\r\n    color: rgba(255, 255, 255, 0.9);\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nconst NavLinks = styled.ul`\r\n  width: 30%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  list-style: none;\r\n`;\r\n\r\nconst LinkItem = styled.li`\r\n  color: white;\r\n  font-size: 1rem;\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: rgba(255, 255, 255, 0.9);\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\n\r\nconst Textarea = styled.textarea`\r\n  width: 100%;\r\n  height: 90%;\r\n  padding: 10px;\r\n  margin: 0.1rem;\r\n  border-radius: 20px;\r\n  box-shadow: 0 0 5px 4px rgb(161, 161, 161);\r\n  background-color: #fff;\r\n  font-size: 1rem;\r\n  outline: none;\r\n  resize: none;\r\n  position: relative;\r\n  text-align: center;\r\n  display: relative;\r\n`;\r\n\r\nconst Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: space-between;\r\n  min-width: 40vw;\r\n  min-height: max-content;\r\n  overflow: hidden;\r\n  padding: 0.5rem 5rem;\r\n\r\n  .upload-icon-container {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    align-self: flex-end;\r\n    transform: translateY(2em);\r\n  }\r\n\r\n  .upload-icon {\r\n    color: rgb(23, 74, 167);\r\n    &:hover {\r\n      color: rgb(4, 26, 66);\r\n    }\r\n    &:active {\r\n      color: rgb(172, 40, 40);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Input = styled.input.attrs((props) => ({ type: \"file\" }))`\r\n  position: absolute;\r\n  padding: 2em 0 0 1em;\r\n  &::file-selector-button {\r\n    display: inline-block;\r\n    background: linear-gradient(top, #f9f9f9, #e3e3e3);\r\n    border: 1px solid #999;\r\n    border-radius: 3px;\r\n    padding: 5px 8px;\r\n    outline: none;\r\n    white-space: nowrap;\r\n    -webkit-user-select: none;\r\n    cursor: pointer;\r\n    text-shadow: 1px 1px #fff;\r\n    font-weight: 700;\r\n    font-size: 10pt;\r\n    &:hover {\r\n      border-color: black;\r\n    }\r\n    &:active {\r\n      background: -webkit-linear-gradient(top, #e3e3e3, #f9f9f9);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UploadBox = ({ section }) => {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const fileUpload = (event) => {\r\n    setFiles(Array.from(event.target.files));\r\n  };\r\n  console.log(files);\r\n\r\n  const sendFiles = (event) => {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    files.forEach((fileItem, i) => {\r\n      console.log(fileItem);\r\n      formData.append(i, fileItem);\r\n    });\r\n\r\n    let noFile = false;\r\n\r\n    axios\r\n      .post(`/api/uploads/${section}`, formData)\r\n      .then((res) => {\r\n        noFile = res.data.noFile;\r\n        if (noFile) {\r\n          alert(`Choose at least one file before uploading`);\r\n          noFile = false;\r\n          return;\r\n        }\r\n        res.status !== 200\r\n          ? alert(`Unable to upload files`)\r\n          : alert(`${res.data}`);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <Textarea\r\n        readOnly=\"yes\"\r\n        name=\"content\"\r\n        id=\"\"\r\n        cols=\"20\"\r\n        rows=\"3\"\r\n        placeholder={`Upload ${section} sheets here`}\r\n      />\r\n      <Input\r\n        onChange={fileUpload}\r\n        // type=\"file\"\r\n        name=\"file\"\r\n        multiple\r\n        className=\"file-input\"\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        onClick={sendFiles}\r\n        className=\"upload-icon-container\"\r\n      >\r\n        <PublishIcon className=\"upload-icon\" />\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst UploadButton = styled.button`\r\n  background: #959595;\r\n  padding: 0.01rem 1.5rem;\r\n  border: none;\r\n  margin: 0.2rem 0.5rem;\r\n  border-radius: 20px;\r\n  box-shadow: 1px 1px 1px 1px rgb(0, 0, 0);\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 1rem;\r\n  }\r\n  &:hover {\r\n    cursor: pointer;\r\n    background: #5e5e5e;\r\n  }\r\n  &:active {\r\n    box-shadow: 0px 0px 1px 0px rgb(0, 0, 0);\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: white;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const ViewButton = ({ children, path }) => {\r\n  return (\r\n    <UploadButton>\r\n      <Link to={path}>{children}</Link>\r\n    </UploadButton>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { Player } from \"@lottiefiles/react-lottie-player\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { ViewButton } from \"../components/index\";\r\n\r\nexport const DisplayContent = ({ route }) => {\r\n  const [data, setData] = useState({\r\n    answerDoc: [],\r\n    markDoc: [],\r\n    text: [],\r\n  });\r\n  const [loading, setLoading] = useState(undefined);\r\n  const [ids, setIds] = useState({\r\n    markId: null,\r\n    answerId: null,\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const getTextData = async () => {\r\n      // ! TO-DO: specify collection from which to retrieve texts\r\n      let result = await axios.get(`/api/${route}`);\r\n      if (result.status !== 200) {\r\n        alert(`Unable to retrieve text from database`);\r\n      } else {\r\n        const { answerDoc, markDoc } = result.data;\r\n        if (answerDoc && markDoc) {\r\n          setData((data) => ({\r\n            ...data,\r\n            answerDoc,\r\n            markDoc,\r\n          }));\r\n        }\r\n        setData((data) => ({\r\n          ...data,\r\n          text: result.data,\r\n        }));\r\n        setLoading(true);\r\n      }\r\n    };\r\n    getTextData();\r\n  }, []);\r\n\r\n  const deleteItem = async (e, id) => {\r\n    const doc = e.target.name;\r\n    const deleteData = await axios.delete(`/api/all-uploads/${doc}/${id}`);\r\n    if (deleteData) {\r\n      // if data was successfully deleted from database\r\n      if (doc === \"answerSheet\") {\r\n        const updatedDoc = data.answerDoc.filter((el) => id !== el._id);\r\n        setData({\r\n          ...data,\r\n          answerDoc: updatedDoc,\r\n        });\r\n      } else {\r\n        const updatedDoc = data.markDoc.filter((el) => id !== el._id);\r\n        setData({ ...data, markDoc: updatedDoc });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!loading ? (\r\n        <Player\r\n          autoplay\r\n          loop\r\n          mode=\"normal\"\r\n          src={process.env.REACT_APP_LOAD_SCREEN_ANIMATION_ONE}\r\n          speed=\"1\"\r\n          style={{ width: \"70%\" }}\r\n        ></Player>\r\n      ) : (\r\n        <>\r\n          {data.answerDoc.length || data.markDoc.length ? (\r\n            <>\r\n              {console.log(\"markDoc: \", data.markDoc)}\r\n              {data.answerDoc ? (\r\n                <>\r\n                  <P>\r\n                    Select the answer documents that you would like to grade\r\n                  </P>\r\n                  <p>\r\n                    You can click on a document's id or filename to view its\r\n                    text\r\n                  </p>\r\n                  {data.answerDoc.map((arr) => (\r\n                    <List key={arr._id}>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"answerSheet\"\r\n                        value={ids.answerId}\r\n                        onChange={(e) =>\r\n                          e.target.checked\r\n                            ? setIds((ids) => ({ ...ids, answerId: arr._id }))\r\n                            : setIds((ids) => ({ ...ids, answerId: null }))\r\n                        }\r\n                      />\r\n                      <Link to={`/texts/${arr._id}`}>{arr._id}</Link>\r\n                      <Link to={`/texts/${arr._id}`}>{arr.page.fileName}</Link>\r\n                      <button\r\n                        onClick={(e) => deleteItem(e, arr._id)}\r\n                        name=\"answerSheet\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </List>\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                <p>\r\n                  No answer sheet has been uploaded.{\" \"}\r\n                  <Link to=\"/grade\">Upload one now</Link>\r\n                </p>\r\n              )}\r\n              {data.markDoc ? (\r\n                <>\r\n                  <P>\r\n                    Select the marking guide to be used for grading the\r\n                    seelected answer documents\r\n                  </P>\r\n                  <p>\r\n                    You can click on a document's id or filename to view its\r\n                    text\r\n                  </p>\r\n                  {data.markDoc.map((arr) => (\r\n                    <List key={arr._id}>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"markSheet\"\r\n                        value={ids.markId}\r\n                        onChange={(e) =>\r\n                          e.target.checked\r\n                            ? setIds((ids) => ({ ...ids, markId: arr._id }))\r\n                            : setIds((ids) => ({ ...ids, markId: null }))\r\n                        }\r\n                      />\r\n                      <Link to={`/texts/${arr._id}`}>{arr._id}</Link>\r\n                      <Link to={`/texts/${arr._id}`}>{arr.page.fileName}</Link>\r\n                      <button\r\n                        onClick={(e) => deleteItem(e, arr._id)}\r\n                        name=\"markSheet\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </List>\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                <p>\r\n                  No marking guide has been uploaded.{\" \"}\r\n                  <Link to=\"/grade\">Upload one now</Link>\r\n                </p>\r\n              )}\r\n              <ViewButton\r\n                children=\"Grade\"\r\n                path={`/viewGrade?markId=${ids.markId}&answerId=${ids.answerId}`}\r\n              />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <P>Click on a document's id or filename to view its text</P>\r\n\r\n              {data.text.map((arr) => (\r\n                <List key={arr._id}>\r\n                  <Link to={`/texts/${arr._id}`}>{arr._id}</Link>\r\n                  <Link to={`/texts/${arr._id}`}>{arr.page.fileName}</Link>\r\n                </List>\r\n              ))}\r\n            </>\r\n          )}\r\n          <button onClick={() => navigate(\"/grade\")}>Go back</button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n// * Styled components\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n  gap: 1rem;\r\n  padding: 0.3rem;\r\n  width: 100%;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 1.5rem;\r\n  }\r\n  height: 100%;\r\n  &:first-of-type {\r\n    margin-top: 3rem;\r\n  }\r\n`;\r\n\r\nexport const P = styled.p`\r\n  margin-top: 2rem;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { Player } from \"@lottiefiles/react-lottie-player\";\r\nimport { UploadBox, ViewButton } from \"../components\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nexport const DisplayGrade = () => {\r\n  const [score, setScore] = useState({ arr: [], grade: 0, totalPoints: 0 });\r\n  const [loading, setLoading] = useState(undefined);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  let query = new URLSearchParams(useLocation().search);\r\n  const markId = query.get(\"markId\");\r\n  const answerId = query.get(\"answerId\");\r\n\r\n  useEffect(() => {\r\n    const getGrade = async () => {\r\n      let result = await axios.get(\r\n        `/api/viewGrade?markId=${markId}&answerId=${answerId}`\r\n      );\r\n      console.log(\"received grade data\", result.data);\r\n      setScore({\r\n        arr: result.data.arr,\r\n        grade: result.data.grade,\r\n        totalPoints: result.data.totalPoints,\r\n      });\r\n      setLoading(true);\r\n    };\r\n    getGrade();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      {!loading ? (\r\n        <Player\r\n          autoplay\r\n          loop\r\n          mode=\"normal\"\r\n          src={process.env.REACT_APP_LOAD_SCREEN_ANIMATION_TWO}\r\n          speed=\"1\"\r\n          style={playerStyle}\r\n        ></Player>\r\n      ) : (\r\n        <GradeContainer>\r\n          <ul>\r\n            {score.arr.map((score) => (\r\n              <ListItem key={score.id}>\r\n                Score for question {score.id + 1}: {score.score}/\r\n                {score.pointsAwardable}\r\n              </ListItem>\r\n            ))}\r\n          </ul>\r\n          <p>{`Total score for this answer page is ${score.grade}/${score.totalPoints}`}</p>\r\n\r\n          <ButtonContainer>\r\n            <ViewButton children=\"View breakdown\" path=\"/details\" />\r\n            <ViewButton children=\"Upload to Google Sheets\" path=\"\" />\r\n          </ButtonContainer>\r\n        </GradeContainer>\r\n      )}\r\n      <button onClick={() => navigate(\"/all-uploads\")}>Go back</button>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// * Styled components\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst GradeContainer = styled.div`\r\n  @import url(\"https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap\");\r\n  font-family: \"Roboto\", sans-serif;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  width: 100vw;\r\n  height: 70vh;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  padding: 0.4rem;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 1rem 0;\r\n  & > * {\r\n    padding: 1rem 1.3rem;\r\n  }\r\n`;\r\n\r\nconst playerStyle = {\r\n  background: \"none\",\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const LandingPage = () => {\r\n  return (\r\n    <Home>\r\n      <div>\r\n        <h1>Welcome to AI-Grader!</h1>\r\n        <p>\r\n          AI-Grader is a web application that uses artificial intelligence to\r\n          grade{\" \"}\r\n          <span>\r\n            <em>handwritten</em>\r\n          </span>{\" \"}\r\n          answer sheets.\r\n        </p>\r\n        <DetailsSection>\r\n          <p>\r\n            AI-Grader uses Microsoft Azure Cognitive Services - Computer Vision,\r\n            Optical Character Recognition and Key Phrase Extraction...\r\n          </p>\r\n          <a href=\"https://github.com/Fiewor/ai-grader\">\r\n            Read more on how it works\r\n          </a>\r\n        </DetailsSection>\r\n\r\n        <LinkSection>\r\n          <Link to=\"/text\">Text-Extractor</Link>\r\n          <Link to=\"/grade\">Grader</Link>\r\n        </LinkSection>\r\n      </div>\r\n    </Home>\r\n  );\r\n};\r\n\r\n// * Styled components\r\nconst Home = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-content: center;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  h1 {\r\n    text-align: center;\r\n    padding: 1rem 0;\r\n    margin-top: 1rem;\r\n    font-size: 1.7rem;\r\n    @media screen and (min-width: 768px) {\r\n      padding: 2rem 0;\r\n      font-size: 2.5rem;\r\n    }\r\n  }\r\n  p {\r\n    font-family: \"Roboto Mono\", monospace;\r\n    padding: 1rem 0;\r\n    text-align: center;\r\n    @media screen and (min-width: 768px) {\r\n      font-size: 1.5rem;\r\n      padding: 1rem;\r\n    }\r\n    span {\r\n      font-family: \"Indie Flower\", cursive;\r\n    }\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: white;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DetailsSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: #959595;\r\n  color: white;\r\n  width: 100vw;\r\n  padding: 2rem 1rem;\r\n  margin: 1rem 0;\r\n  font-family: \"Raleway\", sans-serif;\r\n  @media screen and (min-width: 768px) {\r\n    padding: 5rem 2rem;\r\n  }\r\n  p {\r\n    @media screen and (min-width: 768px) {\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n  a {\r\n    text-align: center;\r\n    color: black;\r\n    font-size: 0.75rem;\r\n    &:hover {\r\n      color: rgba(0, 0, 0, 0.6);\r\n    }\r\n    @media screen and (min-width: 768px) {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LinkSection = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  text-align: left;\r\n  justify-content: center;\r\n  gap: 2rem;\r\n  padding: 1rem 0;\r\n  a {\r\n    background: rgb(94, 94, 94);\r\n    padding: 0.5rem 0.8rem;\r\n    margin-bottom: 1rem;\r\n    border-radius: 20px;\r\n    box-shadow: 1px 1px 1px 1px rgb(0, 0, 0);\r\n    &:hover {\r\n      background: rgb(94, 94, 94, 0.8);\r\n    }\r\n    &:active {\r\n      box-shadow: 0px 0px 1px 0px rgb(0, 0, 0);\r\n    }\r\n    @media screen and (min-width: 768px) {\r\n      padding: 0.8rem 1rem;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n// import { toast } from \"react-toastify\";\r\nimport { FaUser } from \"react-icons/fa\";\r\nimport { register, reset } from \"../features/auth/authSlice\";\r\nimport styled from \"styled-components\";\r\nimport { Player } from \"@lottiefiles/react-lottie-player\";\r\n\r\nexport const Register = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const { name, email, password, password2 } = formData;\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { user, isLoading, isError, isSuccess, message } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      console.log(message);\r\n      // toast.error(message);\r\n    }\r\n    if (isSuccess || user) {\r\n      //! TODO: change this navigation to rememeber the route the user intended to go to originally\r\n      //! and return them there after successful registration\r\n      navigate(\"/grade\");\r\n    }\r\n\r\n    dispatch(reset());\r\n  }, [user, isError, isSuccess, message, navigate, dispatch]);\r\n\r\n  const onChange = (e) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== password2) {\r\n      console.log(\"Passwords do not match\");\r\n      // toast.error(\"Passwords do not match\");\r\n    } else {\r\n      const userData = {\r\n        name,\r\n        email,\r\n        password,\r\n        password2,\r\n      };\r\n\r\n      dispatch(register(userData));\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    <Player\r\n      autoplay\r\n      loop\r\n      mode=\"normal\"\r\n      src={process.env.REACT_APP_LOAD_SCREEN_ANIMATION_ONE}\r\n      speed=\"1\"\r\n      // style={playerStyle}\r\n    ></Player>;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Heading>\r\n        <h1>\r\n          <FaUser />\r\n          Register\r\n        </h1>\r\n        <p>Please create an account</p>\r\n      </Heading>\r\n\r\n      <FormSection>\r\n        <Form onSubmit={onSubmit}>\r\n          <FormGroup>\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              className=\"login-input\"\r\n              value={name}\r\n              placeholder=\"Enter your name\"\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <label htmlFor=\"name\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              placeholder=\"Enter your email\"\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              placeholder=\"Enter your password\"\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <label htmlFor=\"password\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password2\"\r\n              name=\"password2\"\r\n              value={password2}\r\n              placeholder=\"Confirm your password\"\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Button type=\"submit\" value=\"Register\" className=\"login-button\">\r\n              Submit\r\n            </Button>\r\n          </FormGroup>\r\n        </Form>\r\n        <p>\r\n          Already have an account? <Link to=\"/login\">Login</Link>\r\n        </p>\r\n      </FormSection>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// * Styled components\r\nexport const Container = styled.div`\r\n  width: 100vw;\r\n  height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  padding: 1rem 0;\r\n`;\r\nexport const Heading = styled.section`\r\n  width: 30%;\r\n  text-align: center;\r\n`;\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n`;\r\nexport const FormSection = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  justify-content: space-around;\r\n  height: 60%;\r\n  width: 70%;\r\n  font-size: 0.8rem;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 30%;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\nexport const FormGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.5rem 0;\r\n  input {\r\n    border-radius: 10px;\r\n    border: solid 0.05px black;\r\n    padding: 0.5rem;\r\n    width: 60%;\r\n  }\r\n`;\r\nexport const Button = styled.button`\r\n  margin: 0.5rem 0;\r\n  padding: 0.5rem;\r\n  border-radius: 10px;\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FaSignInAlt } from \"react-icons/fa\";\r\nimport {\r\n  Container,\r\n  Heading,\r\n  Form,\r\n  FormSection,\r\n  FormGroup,\r\n  Button,\r\n} from \"./Register\";\r\nimport { login, reset } from \"../features/auth/authSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nexport const Login = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const { email, password } = formData;\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { user, isLoading, isError, isSuccess, message } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      console.log(message);\r\n      // toast.error(message);\r\n    }\r\n    if (isSuccess || user) {\r\n      //! TODO: change this navigation to rememeber the route the user intended to go to originally\r\n      //! and return them there after successful login\r\n      navigate(\"/grade\");\r\n    }\r\n\r\n    dispatch(reset());\r\n  }, [user, isError, isSuccess, message, navigate, dispatch]);\r\n\r\n  const onChange = (e) => {\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      email,\r\n      password,\r\n    };\r\n\r\n    dispatch(login(userData));\r\n  };\r\n\r\n  if (isLoading) {\r\n    // return <Spinner></Spinner>\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Heading>\r\n        <h1>\r\n          <FaSignInAlt />\r\n          Login\r\n        </h1>\r\n        <p>Login to continue</p>\r\n      </Heading>\r\n\r\n      <FormSection>\r\n        <Form onSubmit={onSubmit}>\r\n          <FormGroup>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              placeholder=\"Enter your email\"\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              placeholder=\"Enter your password\"\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Button type=\"submit\" value=\"Register\" className=\"login-button\">\r\n              Submit\r\n            </Button>\r\n          </FormGroup>\r\n        </Form>\r\n        <p>\r\n          Don't have an account? <Link to=\"/register\">Register</Link>\r\n        </p>\r\n      </FormSection>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { Player } from \"@lottiefiles/react-lottie-player\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport Html2Pdf from \"js-html2pdf\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport const TextPage = () => {\r\n  const [text, setText] = useState([]);\r\n  const [fileName, setFileName] = useState(null);\r\n  const [loading, setLoading] = useState(undefined);\r\n  const ref = useRef();\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const getTextData = async (id) => {\r\n      let result = await axios.get(`/api/texts/${id}`);\r\n      console.log(\"result\", result);\r\n      if (result.status !== 200) {\r\n        alert(`Unable to retrieve text from database`);\r\n      } else {\r\n        // using data[0] to get the first element in the data array\r\n        // because the backend uses find() which returns an array of elements\r\n        // ? might switch from find() to findOne() after figuring out...\r\n        // ? ...how to check availability of document using findOne()\r\n        setText(result.data.page.rawText);\r\n        setFileName(result.data.page.fileName);\r\n        setLoading(true);\r\n      }\r\n    };\r\n    getTextData(id);\r\n  }, [id]);\r\n\r\n  const handlePrint = useReactToPrint({\r\n    onPrintError: (error) => console.log(error),\r\n    content: () => ref.current,\r\n    removeAfterPrint: true,\r\n  });\r\n\r\n  const handleDownload = useReactToPrint({\r\n    onPrintError: (error) => console.log(error),\r\n    content: () => ref.current,\r\n    removeAfterPrint: true,\r\n    print: async (printIframe) => {\r\n      const document = printIframe.contentDocument;\r\n      if (document) {\r\n        const html = document.getElementsByTagName(\"html\")[0];\r\n        const exporter = new Html2Pdf(html, {\r\n          filename: fileName ? fileName : \"file\",\r\n        });\r\n        (await exporter.getPdf(true)) && alert(\"downloading pdf file...\");\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {!loading ? (\r\n        <Player\r\n          autoplay\r\n          loop\r\n          mode=\"normal\"\r\n          src={process.env.REACT_APP_LOAD_SCREEN_ANIMATION_ONE}\r\n          speed=\"1\"\r\n          style={{ width: \"70%\" }}\r\n        ></Player>\r\n      ) : (\r\n        <>\r\n          <TextContainer ref={ref}>\r\n            {text.map((line, id) => (\r\n              <Text key={id}>{line}</Text>\r\n            ))}\r\n          </TextContainer>\r\n          <ButtonContainer>\r\n            <Button onClick={handlePrint}>Print</Button>\r\n            <Button onClick={handleDownload}>Download</Button>\r\n          </ButtonContainer>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n// * Styled components\r\nconst TextContainer = styled.div`\r\n  @import url(\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400&display=swap\");\r\n  font-family: \"Roboto Mono\", monospace;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  text-align: left;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 0.8rem;\r\n  padding: 0.2rem 2rem;\r\n  border-bottom: 0.1px solid black;\r\n  &:first-child {\r\n    border-top: 0.1px solid black;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 0.5rem 1rem;\r\n  margin-bottom: 1rem;\r\n  color: white;\r\n  background: rgba(28, 140, 214, 1);\r\n  border: none;\r\n  border-radius: 20px;\r\n  box-shadow: 1px 1px 1px 1px rgb(0, 0, 0);\r\n  &:hover {\r\n    background: rgba(28, 140, 214, 0.8);\r\n  }\r\n  &:active {\r\n    box-shadow: 0px 0px 1px 0px rgb(0, 0, 0);\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { reset } from \"../features/auth/authSlice\";\r\nimport { UploadBox, ViewButton } from \"../components/index\";\r\nimport { Container, Instructions, Title, List, Group, Item } from \"./TextList\";\r\n\r\nexport const DropArea = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { user, isLoading, isError, isSuccess, message } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate(\"/login\");\r\n    }\r\n    if (isError) {\r\n      navigate(\"/login\");\r\n      console.log(message);\r\n      // toast.error(message);\r\n    }\r\n    if (isSuccess || user) {\r\n      navigate(\"/grade\");\r\n    }\r\n\r\n    dispatch(reset());\r\n  }, [user, isError, isSuccess, message, navigate, dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <Instructions>\r\n        <Title>How to use</Title>\r\n        <List>\r\n          <Group>\r\n            <Item>\r\n              Upload a page of student answer sheet in the specified area\r\n            </Item>\r\n            <Item>\r\n              Wait for alert notification confirming successful upload\r\n            </Item>\r\n            <Item>Upload marking guide in specified area</Item>\r\n            <Item>\r\n              Wait for alert notification confirming successful upload\r\n            </Item>\r\n            <Item>\r\n              Wait for about 5 minutes for reading and keyword extraction to be\r\n              carried out\r\n            </Item>\r\n            <Item>Proceed to view extracted text or grade</Item>\r\n          </Group>\r\n          <Group>\r\n            <Item>Supported file formats: JPEG, PNG, BMP, PDF, and TIFF</Item>\r\n            <Item>\r\n              For PDF and TIFF files, the system currently processes only first\r\n              two pages.\r\n            </Item>\r\n            <Item>\r\n              The file size must be less than 4 MB and dimensions at least 50 x\r\n              50 pixels and at most 10000 x 10000 pixels.\r\n            </Item>\r\n          </Group>\r\n        </List>\r\n      </Instructions>\r\n      <UploadBox section=\"answer\" />\r\n      <p>Or proceed to grade existing answer sheet</p>\r\n      <br />\r\n      <UploadBox section=\"mark\" />\r\n      <p>Or procced to use existing marking guide</p>\r\n      <ButtonContainer>\r\n        <ViewButton children=\"Proceed\" path=\"/all-uploads\" />\r\n        {/* <ViewButton children=\"View text\" path=\"/texts\" />\r\n        <ViewButton children=\"View grade\" path=\"/viewGrade\" /> */}\r\n      </ButtonContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// * Styled components\r\nexport const ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 9vh;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { UploadBox, ViewButton } from \"../components\";\r\nimport { ButtonContainer } from \"./DropArea\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { reset } from \"../features/auth/authSlice\";\r\n\r\nexport const TextList = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { user, isLoading, isError, isSuccess, message } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate(\"/login\");\r\n    }\r\n    if (isError) {\r\n      navigate(\"/login\");\r\n      console.log(message);\r\n      // toast.error(message);\r\n    }\r\n    if (isSuccess || user) {\r\n      navigate(\"/text\");\r\n    }\r\n\r\n    dispatch(reset());\r\n  }, [user, isError, isSuccess, message, navigate, dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <Instructions>\r\n        <Title>How to use</Title>\r\n        <List>\r\n          <Group>\r\n            <Item>\r\n              Upload image/pdf containing handwritten text using the provided\r\n              interface below.\r\n            </Item>\r\n            <Item>\r\n              This could be a picture or scanned copy of handwritten or printed\r\n              text.\r\n            </Item>\r\n            <Item>\r\n              Wait for alert notification confirming successful upload.\r\n            </Item>\r\n            <Item>\r\n              Wait for another alert notification confirming document saved in\r\n              database.\r\n            </Item>\r\n            <Item>If no, second notification, wait for about 5 minutes.</Item>\r\n            <Item>\r\n              Proceed to <em>View Text</em>.\r\n            </Item>\r\n            <Item>Proceed to view extracted text or grade.</Item>\r\n          </Group>\r\n\r\n          <Group>\r\n            <Item>Supported file formats: JPEG, PNG, BMP, PDF, and TIFF.</Item>\r\n            <Item>\r\n              For PDF and TIFF files, the system currently processes only first\r\n              two pages.\r\n            </Item>\r\n            <Item>\r\n              The file size must be less than 4 MB and dimensions at least 50 x\r\n              50 pixels and at most 10000 x 10000 pixels.\r\n            </Item>\r\n          </Group>\r\n        </List>\r\n      </Instructions>\r\n      <UploadBox section=\"text\" />\r\n      <ButtonContainer>\r\n        <ViewButton children=\"View text\" path=\"/texts\" />\r\n      </ButtonContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// * Styled components\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Instructions = styled.div`\r\n  @import url(\"https://fonts.googleapis.com/css2?family=Raleway:wght@300&family=Roboto:wght@300&display=swap\");\r\n  font-family: \"Raleway\", sans-serif;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.5rem;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nexport const Title = styled.p`\r\n  font-size: 1.5rem;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style: disc url(\"../icons/check_box_FILL0_wght400_GRAD0_opsz48.png\")\r\n    inside;\r\n`;\r\n\r\nexport const Group = styled.div`\r\n  padding: 0.5rem 0;\r\n  font-family: \"Roboto\", sans-serif;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  font-size: 0.8rem;\r\n  padding: 0.2rem 0;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Header, Footer } from \"./components\";\r\n\r\nimport {\r\n  DisplayGrade,\r\n  DisplayContent,\r\n  LandingPage,\r\n  TextList,\r\n  TextPage,\r\n  Login,\r\n  Register,\r\n  DropArea,\r\n} from \"./pages\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n// import { ToastContainer } from \"react-toastify\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <Routes>\r\n            <Route path=\"/\" exact element={<LandingPage />} />\r\n            <Route path=\"grade\" element={<DropArea />} />\r\n            <Route path=\"text\" element={<TextList />} />\r\n            <Route path=\"login\" element={<Login />} />\r\n            <Route path=\"register\" element={<Register />} />\r\n            <Route path=\"texts\" element={<DisplayContent route=\"texts\" />} />\r\n            <Route path=\"mark\" element={<DisplayContent route=\"mark\" />} />\r\n            <Route\r\n              path=\"all-uploads\"\r\n              element={<DisplayContent route=\"all-uploads\" />}\r\n            />\r\n            <Route path=\"viewGrade\" element={<DisplayGrade />} />\r\n            <Route path=\"texts/:id\" element={<TextPage />} />\r\n            <Route\r\n              path=\"*\"\r\n              element={\r\n                <main style={{ padding: \"1rem\" }}>\r\n                  <p>Ooops. There's nothing here!</p>\r\n                </main>\r\n              }\r\n            />\r\n          </Routes>\r\n          {/* <Footer /> */}\r\n        </div>\r\n      </Router>\r\n      {/* <ToastContainer /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { store } from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nif (module.hot) {\r\n  module.hot.accept();\r\n}\r\n"],"sourceRoot":""}